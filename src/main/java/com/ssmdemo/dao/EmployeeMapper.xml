<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssmdemo.dao.EmployeeMapper">

    <resultMap id="myEmp" type="com.ssmdemo.entity.Employee">

        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="last_name" property="lastName" jdbcType="VARCHAR"></result>
        <result column="email" property="email" jdbcType="VARCHAR"></result>
        <result column="gender" property="gender" jdbcType="INTEGER"></result>
        <result column="dept_id" property="deptId" jdbcType="INTEGER"></result>
        <!--association 指定联合查询的javaBean
           property:指定那个属性是联合对象
           javaType:制定这个属性的类型-->
        <association property="dept" javaType="com.ssmdemo.entity.Dept">
            <id column="deptId" property="id" jdbcType="INTEGER"></id>
            <result column="dept_name" property="deptName" jdbcType="VARCHAR"></result>
        </association>
    </resultMap>

    <select id="findEmpList" resultMap="myEmp">
        select e.id,e.last_name,e.email,e.gender,d.id deptId,d.dept_name
	      from tbl_employee e  left join tbl_dept d on e.dept_id = d.id where 1=1
	    <if test="lastName !=null and lastName.trim()!=''">
            and e.last_name like '%'+#{lastName}+'%'
        </if>
        <if test="email !=null and email.trim()!=''">
            and e.email like '%'+#{email}+'%'
        </if>
        <if test="deptId !=null ">
            and e.dept_id =#{deptId}
        </if>
    </select>

    <select id="findEmpById" resultMap="myEmp">
        select e.id,e.last_name,e.email,e.gender,e.dept_id,d.id deptId,d.dept_name
	      from tbl_employee e  left join tbl_dept d on e.dept_id = d.id where e.id = #{empId}
    </select>

    <update id="updateEmp" parameterType="com.ssmdemo.entity.Employee">
        UPDATE tbl_employee
        <set>
            last_name = #{lastName},email = #{email},gender = #{gender},dept_id = #{deptId}
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <insert id="addEmp" parameterType="com.ssmdemo.entity.Employee">
        INSERT INTO tbl_employee(last_name,email,gender,dept_id) VALUES
        (#{lastName},#{email},#{gender},#{deptId})
    </insert>

    <delete id="deleteEmp" parameterType="INTEGER">
          DELETE tbl_employee WHERE id = #{empId}
    </delete>

</mapper>